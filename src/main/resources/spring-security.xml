<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<security:http auto-config="true" use-expressions="false" access-denied-page="/user/login_failure.html">
		<!-- 允许所有人访问 -->
		<security:intercept-url pattern="/**" access="permitAll" />
		<!-- 允许ROLE_ADMIN权限访问 -->
		<security:intercept-url pattern="/user/findAll.html" access="ROLE_ADMIN"/>
		<!-- 允许ROLE_ADMIN权限访问 -->
		<security:intercept-url pattern="/user/**" access="ROLE_ADMIN"/>
		<!-- 允许ROLE_USER权限访问 -->
		<security:intercept-url pattern="/success.jsp" access="ROLE_USER,ROLE_ADMIN"/>
		<!-- 允许IS_AUTHENTICATED_ANONYMOUSLY匿名访问 -->
		<security:intercept-url pattern="/anonymously.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		
		<!-- 不过滤这些资源 -->
		<security:intercept-url pattern="/js/**" filters="none"/>
		<security:intercept-url pattern="/index.jsp" filters="none"/>
		<!-- login-page默认登录界面, authentication-failure-url出错后跳转界面, default-target-url成功登录后跳转界面-->
		<security:form-login login-page="/index.jsp" authentication-failure-url="XXX.jsp" default-target-url="/success.jsp"/>
		
		<!-- invalidate-session退出系统时是否注销Session, logout-success-url退出系统是跳转的页面, logout-url指定了用于响应退出系统请求的URL-->
		<security:logout invalidate-session="true" logout-success-url="/index.jsp" logout-url="/j_spring_security_logout"/>
		<!-- 
		是否允许同一用户多处登陆
		max-sessions:允许用户帐号登录的次数
		error-if-maximum-exceeded
		false:用户第二次登录时，前一次的登录信息都被清空(默认)
		true:系统会拒绝第二次登录
		 -->
		<security:session-management>
			<security:concurrency-control error-if-maximum-exceeded="true" max-sessions="1"/>
		</security:session-management>
	</security:http>
	<!-- 指定自定义的身份验证策略 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<!-- 通过 customUserDetailsService,Spring会控制用户的访问级别 -->
	<bean id="customUserDetailsService" class="com.maximus.util.customUserDetailsService"/>
</beans>
